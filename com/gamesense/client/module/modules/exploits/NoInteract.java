



package com.gamesense.client.module.modules.exploits;

import com.gamesense.client.module.*;
import com.gamesense.api.setting.*;
import com.gamesense.api.event.events.*;
import me.zero.alpine.listener.*;
import java.util.function.*;
import com.gamesense.client.*;
import net.minecraft.block.*;
import net.minecraft.network.play.client.*;
import net.minecraft.entity.*;
import net.minecraft.network.*;
import net.minecraft.util.math.*;

public class NoInteract extends Module
{
    private Setting.Boolean containerOnly;
    private boolean shouldStop;
    @EventHandler
    private final Listener<PacketEvent.Send> sendListener;
    @EventHandler
    private final Listener<PacketEvent.PostSend> postSendListener;
    
    public NoInteract() {
        super("NoInteract", Module.Category.Exploits);
        this.shouldStop = false;
        this.sendListener = (Listener<PacketEvent.Send>)new Listener(event -> {
            if (event.getPacket() instanceof CPacketPlayerTryUseItemOnBlock && !NoInteract.mc.player.isSneaking()) {
                final CPacketPlayerTryUseItemOnBlock packet = (CPacketPlayerTryUseItemOnBlock)event.getPacket();
                final BlockPos pos = packet.getPos();
                if (this.containerOnly.getValue() && !(NoInteract.mc.world.getBlockState(pos).getBlock() instanceof BlockContainer)) {
                    return;
                }
                NoInteract.mc.player.connection.sendPacket((Packet)new CPacketEntityAction((Entity)NoInteract.mc.player, CPacketEntityAction.Action.START_SNEAKING));
                this.shouldStop = true;
            }
        }, new Predicate[0]);
        this.postSendListener = (Listener<PacketEvent.PostSend>)new Listener(event -> {
            if (event.getPacket() instanceof CPacketPlayerTryUseItemOnBlock && this.shouldStop) {
                final CPacketPlayerTryUseItemOnBlock packet = (CPacketPlayerTryUseItemOnBlock)event.getPacket();
                final BlockPos pos = packet.getPos();
                if (this.containerOnly.getValue() && !(NoInteract.mc.world.getBlockState(pos).getBlock() instanceof BlockContainer)) {
                    return;
                }
                NoInteract.mc.player.connection.sendPacket((Packet)new CPacketEntityAction((Entity)NoInteract.mc.player, CPacketEntityAction.Action.STOP_SNEAKING));
                this.shouldStop = false;
            }
        }, new Predicate[0]);
    }
    
    public void setup() {
        this.containerOnly = this.registerBoolean("Container Only", false);
    }
    
    public void onEnable() {
        GameSense.EVENT_BUS.subscribe((Object)this);
    }
    
    public void onDisable() {
        GameSense.EVENT_BUS.unsubscribe((Object)this);
    }
}
